Turbo Assembler	 Version 4.1	    02/10/25 12:06:54	    Page 1
border.asm



      1				     ;------------------------------------------------------------------------------
      2				     ;		     First work	with video memory. Output a colored symbol to console.
      3				     ;			     @Rogov Anatoliy 08.02.2025	"Sivchuk Bad Day"
      4				     ;------------------------------------------------------------------------------
      5
      6	      =00C9		     left_top_corner	     = 00c9h								    +
      7				     ;frames elements
      8	      =00CD		     top_line		     = 00cdh
      9	      =00BB		     right_top_corner	     = 00bbh
     10	      =00BA		     left_line			     = 00bah
     11	      =0020		     main_char			     = 0020h
     12	      =00BA		     right_line			     = 00bah
     13	      =00C8		     left_bottom_corner	     = 00c8h
     14	      =00CD		     bottom_line	     = 00cdh
     15	      =00BC		     right_bottom_corner = 00bch
     16
     17	      =0050		     window_len			     = 80							    +
     18				     ;window length in columns
     19	      =0019		     window_height	     = 25								    +
     20				     ;window height in rows
     21	      =000A		     frame_color	     = 00001010b							    +
     22				     ;color of frame element
     23
     24	      =0032		     len			     = 50							    +
     25				     ;frame length in columns
     26	      =000A		     height			     = 10							    +
     27				     ;frame height in rows
     28	      =000E		     str_size			     = 14							    +
     29				     ;inside frame string position
     30
     31	      =000F		     x_start			     = (window_len - len) / 2				     ;eval x+
     32				     frame start position
     33	      =0007		     y_start			     = (window_height -	height)	/ 2		     ;eval y frame  +
     34				     start position
     35	      =0021		     x_string			     = x_start + (len -	str_size) / 2		     ;inside frame  +
     36				     string x start position
     37	      =000C		     y_string			     = (2 * height + y_start) /	2 - 1		     ;inside frame  +
     38				     string y start position
     39
     40	0000			     .model tiny										    +
     41				     ;set 64 Kb	model
     42	0000			     .code											    +
     43				     ;define code block
     44				     org 100h											    +
     45				     ;prog's begging ram block
     46
     47	0100  BB B800		     Start:  mov bx, 0b800h									    +
     48				     ;es = video segment
     49	0103  8E C3				     mov es, bx
     50
     51	0105  BB 0195r				     mov bx, offset String							    +
     52				     ;Set frame	data string with frame elements
     53	0108  E8 0048				     call SetString
     54
     55	010B  BB 0195r				     mov bx, offset String							    +
     56				     ;Prepare for frame	drawing
     57	010E  B6 0A				     mov dh, height
Turbo Assembler	 Version 4.1	    02/10/25 12:06:54	    Page 2
border.asm



     58	0110  B2 32				     mov dl, len
     59	0112  BF 0000				     mov di, 0
     60	0115  E8 001A				     call StringDrawing
     61
     62	0118  BB 019Er				     mov bx, offset InsideString
     63	011B  BF 07C2				     mov di, y_string *	window_len * 2 + x_string * 2
     64	011E  B4 0A				     mov ah, frame_color
     65	0120  B9 000E				     mov cx, str_size
     66	0123  E8 0005				     call PrintInsideString
     67
     68	0126  B8 4C00				     mov ax, 4c00h								    +
     69				     ;ax = cmd(4c)
     70	0129  CD 21				     int 21h									    +
     71				     ;call scm
     72
     73				     ;------------------------------------------------------------------------------
     74				     ; Print string inside the frame
     75				     ; Entry:		     BX	= data string address
     76				     ;				     AH	= string color
     77				     ;				     CX	= string length
     78				     ; Exit:		     None
     79				     ; Destroyed:    BX, AL, DI
     80				     ;------------------------------------------------------------------------------
     81
     82	012B			     PrintInsideString	     proc
     83
     84	012B								     print_string:
     85	012B  8A 07								     mov al, [bx]
     86	012D  AB								     stosw
     87	012E  43								     inc bx
     88	012F  E2 FA							     loop print_string
     89
     90	0131  C3							     ret						    +
     91				     ;return function value
     92	0132								     endp						    +
     93				     ;proc's ending
     94
     95				     ;------------------------------------------------------------------------------
     96
     97				     ;------------------------------------------------------------------------------
     98				     ; Draw frame with size: len, height
     99				     ; Entry:		     BX	= data string address
    100				     ;				     DH	= frame	height
    101				     ;				     DL	= frame	len
    102				     ; Exit:		     None
    103				     ; Destroyed:    BX
    104				     ;------------------------------------------------------------------------------
    105
    106	0132			     StringDrawing   proc
    107
    108	0132  81 C7 047E					     add di, y_start * window_len * 2 +	x_start	* 2	     ;draw  +
    109				     frame top line
    110	0136  E8 003F						     call PrintString
    111
    112	0139  B9 0008						     mov cx, height - 2						    +
    113				     ;draw frame main lines
    114	013C							     cycle1:
Turbo Assembler	 Version 4.1	    02/10/25 12:06:54	    Page 3
border.asm



    115	013C  81 C7 00A0						     add di, window_len	* 2
    116	0140  E8 0035							     call PrintString
    117	0143  83 EB 03							     sub bx, 3
    118	0146  E2 F4						     loop cycle1
    119	0148  83 C3 03						     add bx, 3
    120
    121	014B  81 C7 00A0					     add di, window_len	* 2					    +
    122				     ;draw frame bottom	line
    123	014F  E8 0026						     call PrintString
    124
    125	0152  C3						     ret							    +
    126				     ;return function value
    127	0153							     endp							    +
    128				     ;proc's ending
    129
    130				     ;------------------------------------------------------------------------------
    131
    132				     ;------------------------------------------------------------------------------
    133				     ; Set String
    134				     ; Entry:		     None
    135				     ; Exit:		     None
    136				     ; Destroyed:    BX
    137				     ;------------------------------------------------------------------------------
    138
    139	0153			     SetString	     proc
    140
    141	0153  C6 07 C9					     mov byte ptr ds: [bx], left_top_corner
    142	0156  43					     inc bx
    143
    144	0157  C6 07 CD					     mov byte ptr ds: [bx], top_line
    145	015A  43					     inc bx
    146
    147	015B  C6 07 BB					     mov byte ptr ds: [bx], right_top_corner
    148	015E  43					     inc bx
    149
    150	015F  C6 07 BA					     mov byte ptr ds: [bx], left_line
    151	0162  43					     inc bx
    152
    153	0163  C6 07 20					     mov byte ptr ds: [bx], main_char
    154	0166  43					     inc bx
    155
    156	0167  C6 07 BA					     mov byte ptr ds: [bx], right_line
    157	016A  43					     inc bx
    158
    159	016B  C6 07 C8					     mov byte ptr ds: [bx], left_bottom_corner
    160	016E  43					     inc bx
    161
    162	016F  C6 07 CD					     mov byte ptr ds: [bx], bottom_line
    163	0172  43					     inc bx
    164
    165	0173  C6 07 BC					     mov byte ptr ds: [bx], right_bottom_corner
    166	0176  43					     inc bx
    167
    168	0177  C3					     ret								    +
    169				     ;return function value
    170	0178						     endp								    +
    171				     ;proc's ending
Turbo Assembler	 Version 4.1	    02/10/25 12:06:54	    Page 4
border.asm



    172
    173				     ;------------------------------------------------------------------------------
    174
    175				     ;------------------------------------------------------------------------------
    176				     ; Draws string to console in format: s1s2....s2s3
    177				     ; Entry:		     BX	= string address
    178				     ;				     DL	= string len
    179				     ; Exit:		     None
    180				     ; Destroyed:    AX, BX, CX, SI
    181				     ;------------------------------------------------------------------------------
    182
    183	0178			     PrintString     proc
    184
    185	0178  B4 0A					     mov ah, frame_color						    +
    186				     ;set symbols color
    187
    188																    +
    189				     ;Print first string symbol
    190	017A  8A 07					     mov al, [bx]							    +
    191				     ;al = *bx
    192	017C  AB					     stosw								    +
    193				     ;mov es: [di], ax / di += 2
    194	017D  43					     inc bx								    +
    195				     ;bx++
    196
    197																    +
    198				     ;Print second string symbols
    199	017E  8B F1					     mov si, cx								    +
    200				     ;save prev	loop cnt
    201	0180  8A CA					     mov cl, dl								    +
    202				     ;counter =	dl
    203	0182  80 E9 02					     sub cl, 2								    +
    204				     ;without top and bottom line
    205	0185						     cycle:								    +
    206				     ;while
    207	0185  8A 07						     mov al, [bx]						    +
    208				     ;al = *bx
    209	0187  AB						     stosw							    +
    210				     ;mov es: [bx], ax / di += 2
    211	0188  E2 FB					     loop cycle								    +
    212				     ;goto cycle
    213	018A  43					     inc bx								    +
    214				     ;bx++
    215	018B  8B CE					     mov cx, si								    +
    216				     ;return prev loop cnt
    217
    218																    +
    219				     ;Print third string symbol
    220	018D  8A 07					     mov al, [bx]							    +
    221				     ;al = [bx]
    222	018F  AB					     stosw								    +
    223				     ;mov es: [bx], ax / di += 2
    224	0190  43					     inc bx								    +
    225				     ;bx++
    226
    227	0191  83 EF 64					     sub di, len * 2							    +
    228				     ;set di to	line beginning
Turbo Assembler	 Version 4.1	    02/10/25 12:06:54	    Page 5
border.asm



    229
    230	0194  C3					     ret								    +
    231				     ;return function value
    232	0195						     endp								    +
    233				     ;proc's ending
    234
    235				     ;------------------------------------------------------------------------------
    236
    237	0195  3C 5F 3E 7C 20 7C	3C+  String		     db	'<_>| |<_>'
    238	      5F 3E
    239	019E  49 20 77 61 6E 6E	61+  InsideString    db	'I wanna sleep!$'
    240	      20 73 6C 65 65 70	21+
    241	      24
    242
    243				     end     Start										    +
    244				     ;pog's ending
Turbo Assembler	 Version 4.1	    02/10/25 12:06:54	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/10/25"
??FILENAME			  Text	 "border  "
??TIME				  Text	 "12:06:53"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 BORDER
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BOTTOM_LINE			  Number 00CD
CYCLE				  Near	 DGROUP:0185
CYCLE1				  Near	 DGROUP:013C
FRAME_COLOR			  Number 000A
HEIGHT				  Number 000A
INSIDESTRING			  Byte	 DGROUP:019E
LEFT_BOTTOM_CORNER		  Number 00C8
LEFT_LINE			  Number 00BA
LEFT_TOP_CORNER			  Number 00C9
LEN				  Number 0032
MAIN_CHAR			  Number 0020
PRINTINSIDESTRING		  Near	 DGROUP:012B
PRINTSTRING			  Near	 DGROUP:0178
PRINT_STRING			  Near	 DGROUP:012B
RIGHT_BOTTOM_CORNER		  Number 00BC
RIGHT_LINE			  Number 00BA
RIGHT_TOP_CORNER		  Number 00BB
SETSTRING			  Near	 DGROUP:0153
START				  Near	 DGROUP:0100
STRING				  Byte	 DGROUP:0195
STRINGDRAWING			  Near	 DGROUP:0132
STR_SIZE			  Number 000E
TOP_LINE			  Number 00CD
WINDOW_HEIGHT			  Number 0019
WINDOW_LEN			  Number 0050
X_START				  Number 000F
X_STRING			  Number 0021
Y_START				  Number 0007
Y_STRING			  Number 000C

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  01AD Word	  Public  CODE
